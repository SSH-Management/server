name: docker

on:
  workflow_call:
  push:
    branches:
      - main
    tags:
      - 'v*'

jobs:
  tests:
    uses: SSH-Management/server/.github/workflows/test.yml@main
  lint:
    uses: SSH-Management/server/.github/workflows/lint.yml@main
  codeql:
    uses: SSH-Management/server/.github/workflows/codeql-analysis.yml@main
  server:
    needs: [ tests, lint, codeql ]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          ref: main
      - name: Get Tag
        if: startsWith(github.ref, 'refs/tags/v')
        uses: olegtarasov/get-tag@v2.1
        id: version_tag
        with:
          tagRegex: "v(.*)"
      - name: Get Tag Develop
        if: !startsWith(github.ref, 'refs/tags/v')
        id: version_tag
        run: |
          echo "::set-output name=tag::dev\n"
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push SSH Management Server
        id: docker_build_server
        uses: docker/build-push-action@v2
        with:
          file: docker/Dockerfile
          context: .
          push: true
          pull: true
          platforms: linux/amd64,linux/arm64
          target: production
          tags: malusevd99/ssh-management:server-${{ steps.version_tag.outputs.tag }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
  queue:
    runs-on: ubuntu-latest
    needs: [ tests ]
    steps:
      - uses: actions/checkout@v2
        with:
          ref: main
      - uses: olegtarasov/get-tag@v2.1
        id: version_tag
        if: startsWith(github.ref, 'refs/tags/v')
        with:
          tagRegex: "v(.*)"
          tagRegexGroup: 1
      - name: Get Tag Develop
        if: !startsWith(github.ref, 'refs/tags/v')
        id: version_tag
        run: |
          echo "::set-output name=tag::dev\n"
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and push SSH Management Queue
        id: docker_build_queue
        uses: docker/build-push-action@v2
        with:
          file: docker/Dockerfile
          context: .
          push: true
          pull: true
          platforms: linux/amd64,linux/arm64
          target: production
          tags: malusevd99/ssh-management:queue-${{ steps.version_tag.outputs.tag }}
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache-new,mode=max
