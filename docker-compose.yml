version: '3.6'

services:
  server:
    build:
      context: .
      dockerfile: ./docker/Dockerfile
      target: development
    command: 'air -c .air.server.toml'
    networks:
      - net
    restart: unless-stopped
    ports:
      - '8080:8080'
      - '6543:6543'
      - '2345:2345'
    depends_on:
      - mysql
      - redis
    volumes:
      - 'gocache:/root/.cache/go-build'
      - 'gomodules_server:/go'
      - './logs:/var/log/ssh_management.yml'
      - './ssh_management.yml.example.yml:/etc/ssh_management.yml/ssh_management_ok.yml'
      - '.:/app'
  queue:
    build:
      context: .
      dockerfile: ./docker/Dockerfile
      target: development
    command: 'air -c .air.queue.toml'
    networks:
      - net
    restart: unless-stopped
    depends_on:
      - server
      - mysql
      - redis
    volumes:
      - 'gocache:/root/.cache/go-build'
      - 'gomodules_queue:/go'
      - './logs:/var/log/ssh_management.yml'
      - './ssh_management.yml.example.yml:/etc/ssh_management.yml/ssh_management_ok.yml'
      - '.:/app'
  redis:
    image: 'redis:6-alpine'
    networks:
      - net
    restart: unless-stopped
    ports:
      - '6379:6379'
  mysql:
    image: mysql/mysql-server:8.0.28-1.2.7-server
    ports:
      - '3306:3306'
    networks:
      - net
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: password
      MYSQL_DATABASE: ssh_management.yml
      MYSQL_USER: server
      MYSQL_PASSWORD: server
      MYSQL_ROOT_HOST: '%'
    volumes:
      - mysql:/var/lib/mysql
  queuemon:
    image: hibiken/asynqmon
    command: --redis-addr redis:6379 --redis-db 3
    ports:
      - '8000:8080'
    networks:
      - net
    restart: unless-stopped
    depends_on:
      - redis
  mailhog:
    image: mailhog/mailhog
    ports:
      - '1025:1025'
      - '8025:8025'
    restart: unless-stopped
    networks:
      - net
  client:
    image: malusevd99/ssh-management:client-0.3.0
    ports:
      - '9999:9999'
    environment:
      MASTER_SERVER: server:6543
      SERVER_NAME: 'test_client'
      SERVER_GROUP: 'test_group'
    depends_on:
      - server
    restart: unless-stopped
    networks:
      - net
    volumes:
      - ./logs/client:/var/log/ssh_management.yml
networks:
  net:
    driver: bridge
    name: ssh_server_net
volumes:
  mysql:
  gocache:
  gomodules_server:
  gomodules_queue:
